openapi: 3.0.3
info:
  title: Swagger Hotel Booking - OpenAPI 3.0
  description: Todo
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: booking
    description: Access to hotel bookings
  - name: rooms
    description: Operations about rooms
  - name: customer
    description: Operations about customers
  - name: room_extras
    description: Operations about extras
  - name: extra_types
    description: Operations about extras
paths:
  /booking:
    put:
      tags:
        - booking
      summary: Update an existing booking
      description: Update an existing booking by Id
      operationId: updateBooking
      requestBody:
        description: Update an existent booking in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/booking'
          application/xml:
            schema:
              $ref: '#/components/schemas/booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/booking'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/booking'
            application/xml:
              schema:
                $ref: '#/components/schemas/booking'
        '400':
          description: Invalid ID supplied
        '404':
          description: Booking not found
        '405':
          description: Validation exception
    post:
      tags:
        - booking
      summary: Add a new booking to the store
      description: Add a new booking to the store
      operationId: addBooking
      requestBody:
        description: Create a new booking in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/booking'
          application/xml:
            schema:
              $ref: '#/components/schemas/booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/booking'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/booking'
            application/xml:
              schema:
                $ref: '#/components/schemas/booking'
        '405':
          description: Invalid input
  /booking/{bookingId}:
    get:
      tags:
        - booking
      summary: Find booking by ID
      description: Returns a single booking
      operationId: getBookingById
      parameters:
        - name: bookingId
          in: path
          description: ID of booking to return
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: start
          schema:
            type: string
          description: Start date (optional)
          required: false
        - in: query
          name: end
          schema:
            type: string
          description: End date (optional)
          required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/booking'
            application/xml:
              schema:
                $ref: '#/components/schemas/booking'
        '400':
          description: Invalid ID supplied
        '404':
          description: room not found
  /customer:
    put:
      tags:
        - customer
      summary: Update an existing customer
      description: Update an existing customer by Id
      operationId: updateCustomer
      requestBody:
        description: Update an existent customer in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer'
          application/xml:
            schema:
              $ref: '#/components/schemas/customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/customer'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
            application/xml:
              schema:
                $ref: '#/components/schemas/customer'
        '400':
          description: Invalid ID supplied
        '404':
          description: Booking not found
        '405':
          description: Validation exception
    post:
      tags:
        - customer
      summary: Add a new customer to the store
      description: Add a new customer to the store
      operationId: addCustomer
      requestBody:
        description: Create a new customer in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer'
          application/xml:
            schema:
              $ref: '#/components/schemas/customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/customer'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
            application/xml:
              schema:
                $ref: '#/components/schemas/customer'
        '405':
          description: Invalid input
  /customer/{customerId}:
    get:
      tags:
        - customer
      summary: Find customer by ID
      description: Returns a single customer
      operationId: getCustomerById
      parameters:
        - name: customerId
          in: path
          description: ID of customer to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'
            application/xml:
              schema:
                $ref: '#/components/schemas/customer'
        '400':
          description: Invalid ID supplied
        '404':
          description: customer not found
  /rooms/{roomId}:
    get:
      tags:
        - rooms
      summary: Find room by ID
      description: Returns a single room
      operationId: getRoomById
      parameters:
        - name: roomId
          in: path
          description: ID of room to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/room'
            application/xml:
              schema:
                $ref: '#/components/schemas/room'
        '400':
          description: Invalid ID supplied
        '404':
          description: room not found
  /rooms:
    get:
      tags:
        - rooms
      summary: Get all rooms
      description: Retrieve a list of all rooms
      operationId: getAllRooms
      parameters:
        - in: query
          name: start
          schema:
            type: string
          description: Start date (optional)
          required: false
        - in: query
          name: end
          schema:
            type: string
          description: End date (optional)
          required: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/room'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/room'
        '400':
          description: Invalid status value
    put:
      tags:
        - rooms
      summary: Update an existing room
      description: Update an existing room by Id
      operationId: updateRoom
      requestBody:
        description: Update an existent room in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/room'
          application/xml:
            schema:
              $ref: '#/components/schemas/room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/room'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/room'
            application/xml:
              schema:
                $ref: '#/components/schemas/room'
        '400':
          description: Invalid ID supplied
        '404':
          description: Room not found
        '405':
          description: Validation exception
    post:
      tags:
        - rooms
      summary: Add a new room room the store
      description: Add a new booking to the store
      operationId: addRoom
      requestBody:
        description: Create a new room in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/room'
          application/xml:
            schema:
              $ref: '#/components/schemas/room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/room'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/room'
            application/xml:
              schema:
                $ref: '#/components/schemas/room'
        '405':
          description: Invalid input
  /room_extras/{roomId}:
    get:
      tags:
        - room_extras
      summary: Find extras for room by room ID
      description: Returns multpile extras
      operationId: getExtryByRoomId
      parameters:
        - name: roomId
          in: path
          description: ID of room for whiche extras to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/room_extra'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/room_extra'
        '400':
          description: Invalid status value
  /room_extras:
    put:
      tags:
        - room_extras
      summary: Update an existing extra
      description: Update an extra room by Id
      operationId: updateRoomExtra
      requestBody:
        description: Update an existent room in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/room_extra'
          application/xml:
            schema:
              $ref: '#/components/schemas/room_extra'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/room_extra'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/room_extra'
            application/xml:
              schema:
                $ref: '#/components/schemas/room_extra'
        '400':
          description: Invalid ID supplied
        '404':
          description: Room not found
        '405':
          description: Validation exception
    post:
      tags:
        - room_extras
      summary: Add a new extra the store
      description: Add a new extra to the store
      operationId: addRoomExtra
      requestBody:
        description: Create a new extra in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/room_extra'
          application/xml:
            schema:
              $ref: '#/components/schemas/room_extra'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/room_extra'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/room_extra'
            application/xml:
              schema:
                $ref: '#/components/schemas/room_extra'
        '405':
          description: Invalid input
  /extra_types/{extraId}:
    get:
      tags:
        - extra_types
      summary: Find extras for room by room ID
      description: Returns multpile extras
      operationId: getExtryById
      parameters:
        - name: extraId
          in: path
          description: ID of room for whiche extras to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/extra_type'
            application/xml:
              schema:
                $ref: '#/components/schemas/extra_type'
        '400':
          description: Invalid ID supplied
        '404':
          description: room not found
  /extra_types:
    get:
      tags:
        - extra_types
      summary: Get all extras
      description: Retrieve a list of all extras
      operationId: getAllExtras
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/extra_type'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/extra_type'
        '400':
          description: Invalid status value
    put:
      tags:
        - extra_types
      summary: Update an existing extra
      description: Update an extra by Id
      operationId: updateExtraType
      requestBody:
        description: Update an existent extra in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/extra_type'
          application/xml:
            schema:
              $ref: '#/components/schemas/extra_type'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/extra_type'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/extra_type'
            application/xml:
              schema:
                $ref: '#/components/schemas/extra_type'
        '400':
          description: Invalid ID supplied
        '404':
          description: Room not found
        '405':
          description: Validation exception
    post:
      tags:
        - extra_types
      summary: Add a new extra the store
      description: Add a new extra to the store
      operationId: addRExtraType
      requestBody:
        description: Create a new extra in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/extra_type'
          application/xml:
            schema:
              $ref: '#/components/schemas/extra_type'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/extra_type'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/extra_type'
            application/xml:
              schema:
                $ref: '#/components/schemas/extra_type'
        '405':
          description: Invalid input
components:
  schemas:
    customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Muster
        surname:
          type: string
          example: Max
        email:
          type: string
          format: email
          example: max.muster@gmail.com
        phonenumber:
          type: integer
          format: int64
          example: 10
        address:
          type: string
          example: Max
      xml:
        name: customer
    booking:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: title
        additional_notes:
          type: string
          example: notes
        customer_id:
          type: integer
          format: int64
          example: 10
        room_id:
          type: integer
          format: int64
          example: 10
        created_at:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00.000Z
        booking_start:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00.000Z
        booking_end:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00.000Z
        breakfast:
          type: boolean
        total_cost:
          type: integer
          format: int64
          example: 10
        cancelled:
          type: boolean
      xml:
        name: booking
    room:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: title
        dedscription:
          type: string
          example: details
        price:
          type: integer
          format: int64
          example: 10
        room_type:
          type: string
          example: single
        bed_type:
          type: string
          example: single
        bed_count:
          type: integer
          format: int64
          example: 1
        extras:
          type: array
          items:
            type: string
            example:
              - wifi
              - balcony
              - air conditioning
        image:
          type: string
          example: https://example.com/images/room.jpg
      xml:
        name: room
    room_extra:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        room_id:
          type: integer
          format: int64
          example: 10
        exrta_id:
          type: integer
          format: int64
          example: 10
      xml:
        name: room_extra
    extra_type:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: title
        dedscription:
          type: string
          example: details
      xml:
        name: extra_type
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    booking:
      description: booking object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/booking'
        application/xml:
          schema:
            $ref: '#/components/schemas/booking'
